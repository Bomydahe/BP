So again, got this error: 

Android Bundling complete 35897ms
 LOG   trainerId  5xLv2aPtHdbFHWAnhgEmIKTTjQy1
 LOG  ExponentPushToken[uDboz4PvjD84s3mGp_qpmx]
 LOG  Expo push token saved to Firestore
 ERROR  Error sending notification: [Error: HTTP error! Status: 500]

this is my index.js: 

const functions = require("firebase-functions");
const admin = require("firebase-admin");
const { Expo } = require("expo-server-sdk");

admin.initializeApp();

// Create a new Expo SDK client
const expo = new Expo();

exports.sendNotification = functions.https.onRequest(async (req, res) => {
  const trainerId = req.body.trainerId;
  if (!trainerId) {
    res.status(400).send("Missing trainerId");
    return;
  }

  // Fetch the user's Expo push token from Firestore
  const userDoc = await admin
    .firestore()
    .collection("users")
    .doc(trainerId)
    .get();
  const pushToken = userDoc.data().expoPushToken;

  if (!Expo.isExpoPushToken(pushToken)) {
    console.error("Invalid push token:", pushToken);
    res.status(400).send("Invalid push token");
    return;
  }

  // Create the message
  const message = {
    to: pushToken,
    sound: "default",
    title: "New video uploaded",
    body: "A new video has been uploaded for you to review!",
    data: { someData: "goes here" },
  };

  // Send the notification
  try {
    const receipt = await expo.sendPushNotificationsAsync([message]);
    console.log("Notification sent:", receipt);
    res.status(200).send("Notification sent");
  } catch (error) {
    console.error("Error sending notification:", error);
    res.status(500).send("Error sending notification");
  }
});


and logs from error: 

2023-04-20 13:25:28.255 CEST
sendNotification
r4j3l95t8uvm
Function execution started
{
insertId: "qdb4unfhc5unq"
labels: {1}
logName: "projects/testproject-d2c7e/logs/cloudfunctions.googleapis.com%2Fcloud-functions"
receiveTimestamp: "2023-04-20T11:25:28.263035795Z"
resource: {2}
severity: "DEBUG"
textPayload: "Function execution started"
timestamp: "2023-04-20T11:25:28.255058398Z"
trace: "projects/testproject-d2c7e/traces/1014709fc84e380bf05ca0947ba001b2"
}
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
Error sending notification: Error: "[0].to" is required.
{
insertId: "644121290000fc19056ddf94"
labels: {2}
logName: "projects/testproject-d2c7e/logs/cloudfunctions.googleapis.com%2Fcloud-functions"
receiveTimestamp: "2023-04-20T11:25:29.260642675Z"
resource: {2}
textPayload: "Error sending notification: Error: "[0].to" is required."
timestamp: "2023-04-20T11:25:29.064537Z"
trace: "projects/testproject-d2c7e/traces/1014709fc84e380bf05ca0947ba001b2"
}
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
    at Expo.getErrorFromResultError (/workspace/node_modules/expo-server-sdk/build/ExpoClient.js:299:23)
{
insertId: "644121290000fc31f4730a86"
labels: {2}
logName: "projects/testproject-d2c7e/logs/cloudfunctions.googleapis.com%2Fcloud-functions"
receiveTimestamp: "2023-04-20T11:25:29.260642675Z"
resource: {2}
textPayload: "    at Expo.getErrorFromResultError (/workspace/node_modules/expo-server-sdk/build/ExpoClient.js:299:23)"
timestamp: "2023-04-20T11:25:29.064561Z"
trace: "projects/testproject-d2c7e/traces/1014709fc84e380bf05ca0947ba001b2"
}
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
at Expo.getErrorFromResult (/workspace/node_modules/expo-server-sdk/build/ExpoClient.js:288:28)
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
at Expo.<anonymous> (/workspace/node_modules/expo-server-sdk/build/ExpoClient.js:270:25)
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
at Generator.next (<anonymous>)
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
at fulfilled (/workspace/node_modules/expo-server-sdk/build/ExpoClient.js:24:58)
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
at processTicksAndRejections (node:internal/process/task_queues:96:5) {
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
code: 'VALIDATION_ERROR',
2023-04-20 13:25:29.064 CEST
sendNotification
r4j3l95t8uvm
statusCode: 400
2023-04-20 13:25:29.066 CEST
sendNotification
r4j3l95t8uvm
Function execution took 811 ms, finished with status: 'error

Maybe problem is also how trainer notification are setup:

import * as Notifications from "expo-notifications";
import React from "react";

// This function will be called when a notification is received while the app is in the foreground
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: false,
  }),
});

// This function will be called when the app receives a notification in the background or is closed
async function handleNotificationResponse(response) {
  // Do something with the notification response data
  console.log("Notification response:", response);
}

export default function useTrainerNotification() {
  React.useEffect(() => {
    // Register the notification response listener
    const subscription = Notifications.addNotificationResponseReceivedListener(
      handleNotificationResponse
    );

    // Clean up the listener on unmount
    return () => {
      subscription.remove();
    };
  }, []);
}


and this is how i call this hook:
import React, { useState, useEffect } from "react";
import {
  StyleSheet,
  View,
  FlatList,
  TouchableOpacity,
  Image,
  Dimensions,
  Text,
  ActivityIndicator,
  TextInput,
} from "react-native";
import { useNavigation, useFocusEffect } from "@react-navigation/native";
import { Ionicons } from "@expo/vector-icons";
import { Entypo } from "@expo/vector-icons";
import { firebase } from "../../firebaseConfig";
import {
  Menu,
  MenuOptions,
  MenuOption,
  MenuTrigger,
} from "react-native-popup-menu";
import useTrainerNotification from "../../hooks/useTrainerNotification";

const { width } = Dimensions.get("window");
const numColumns = 2;
const clientWidth = (width - 20 * (numColumns + 1)) / numColumns;

export default function TrainerHomeScreen() {
  const [clients, setClients] = useState([]);
  const [filteredClients, setFilteredClients] = useState([]);
  const [searchInput, setSearchInput] = useState("");
  const navigation = useNavigation();
  const [videos, setVideos] = React.useState([]);
  const [currentUserID, setCurrentUserID] = useState("");
  const [dataLoaded, setDataLoaded] = useState(false);
  const [showSearchInput, setShowSearchInput] = useState(false);
  useTrainerNotification();


  And lastly this is the testbutton component theat sends notifications:

  import React from "react";
import { TouchableOpacity, Text } from "react-native";
import { firebase } from "../../firebaseConfig";

const TestButton = ({ trainerId }) => {
  const handlePress = async () => {
    try {
      const response = await fetch(
        "https://us-central1-testproject-d2c7e.cloudfunctions.net/sendNotification",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ trainerId: trainerId }),
        }
      );
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      console.log("Sent notification");
    } catch (error) {
      console.error("Error sending notification:", error);
    }
  };

  return (
    <TouchableOpacity onPress={handlePress}>
      <Text>Test Send Notification</Text>
    </TouchableOpacity>
  );
};

export default TestButton;


And n firebase database this are user fields of user that is trying to send notification:

email: "c@c.com"
expoPushToken: "ExponentPushToken[uDboz4PvjD84s3mGp_qpmx]"
role: "user"
trainerId: "5xLv2aPtHdbFHWAnhgEmIKTTjQy1" 